{"version":3,"sources":["assets\\Script\\Player\\OverallStats.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameController from \"../Controller/GameController\";\nimport UIController from \"../Controller/UIController\";\nimport Utils from \"../Controller/Utils\";\nimport Weapon from \"../Weapon/Weapon\";\nimport PlayerController from \"./PlayerController\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class OverallStats extends cc.Component {\n  static instance: OverallStats;\n  //   maxHpRate: number = 0;\n  //   atkRate: number = 0;\n  //   spdRate: number = 0;\n  //   critChance: number = 0;\n  //   pickupRangeRate: number = 0;\n  //   resistRate: number = 0;\n  nameList: Array<String> = new Array<String>();\n  statList: Array<number> = new Array<number>();\n  player: PlayerController;\n  loadStats() {\n    for (let i = 0; i < this.nameList.length; i++) {\n      this.statList[i] = 0;\n    }\n  }\n  loadFromCharacterData() {\n    let data = PlayerController.instance.loadedData;\n    this.increaseAttackRate(data.atk);\n    this.increaseCritChance(data.crit);\n  }\n  pushToList() {\n    this.nameList.push(\"Max HP Rate\");\n    this.nameList.push(\"Attack Rate\");\n    this.nameList.push(\"Speed Rate\");\n    this.nameList.push(\"Haste Rate\");\n    this.nameList.push(\"Weapon size Rate\");\n    this.nameList.push(\"Critical Chance\");\n    this.nameList.push(\"Critical Damage Rate\");\n    this.nameList.push(\"Pickup Range Rate\");\n    this.nameList.push(\"Resist Rate\");\n    this.nameList.push(\"Bonus Healing Rate\");\n    this.nameList.push(\"Bonus Exp Rate\");\n  }\n\n  onStatsChange() {\n    if (GameController.instance.isGameOver) return;\n    PlayerController.instance.onStatChange();\n    Weapon.instance.onStatChange();\n    UIController.instance.updateStats();\n  }\n  increaseMaxHPRate(amount: number) {\n    this.statList[0] += amount;\n    this.onStatsChange();\n  }\n  increaseAttackRate(amount: number) {\n    this.statList[1] += amount;\n    this.onStatsChange();\n  }\n  increaseSpeedRate(amount: number) {\n    this.statList[2] += amount;\n    this.onStatsChange();\n  }\n  increaseHasteRate(amount: number) {\n    this.statList[3] += amount;\n    this.onStatsChange();\n  }\n  increaseWeaponSizeRate(amount: number) {\n    this.statList[4] += amount;\n    this.onStatsChange();\n  }\n  increaseCritChance(amount: number) {\n    this.statList[5] += amount;\n    this.onStatsChange();\n  }\n  increaseCritDamageRate(amount: number) {\n    this.statList[6] += amount;\n    this.onStatsChange();\n  }\n  increasePickupRangeRate(amount: number) {\n    this.statList[7] += amount;\n    this.onStatsChange();\n  }\n  increaseResistRate(amount: number) {\n    this.statList[8] += amount;\n    this.onStatsChange();\n  }\n  increaseBonusHealingRate(amount: number) {\n    this.statList[9] += amount;\n    this.onStatsChange();\n  }\n  increaseBonusExpRate(amount: number) {\n    this.statList[10] += amount;\n    this.onStatsChange();\n  }\n\n  getMaxHPRate() {\n    return this.statList[0];\n  }\n  getAttackRate() {\n    return this.statList[1];\n  }\n  getSpeedRate() {\n    return this.statList[2];\n  }\n  getHasteRate() {\n    return this.statList[3];\n  }\n  getWeaponSizeRate() {\n    return this.statList[4];\n  }\n  getCritChance() {\n    return this.statList[5];\n  }\n  getCritDamageRate() {\n    return this.statList[6];\n  }\n  getPickupRangeRate() {\n    return this.statList[7];\n  }\n  getResistRate() {\n    return this.statList[8];\n  }\n  getBonusHealingRate() {\n    return this.statList[9];\n  }\n  getBonusExpRate() {\n    return this.statList[10];\n  }\n  onLoad() {\n    OverallStats.instance = this;\n    this.player = PlayerController.instance;\n    this.pushToList();\n    this.loadStats();\n  }\n\n  start() {\n    this.loadFromCharacterData();\n  }\n\n  update(dt) {}\n}\n"]}