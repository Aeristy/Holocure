{"version":3,"sources":["assets\\Script\\Other Object\\DeathHeart.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;;;;;;;;;;;;;;AAEhF,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAwC,8BAAY;IAApD;QAAA,qEAqBC;QAnBC,UAAI,GAAY,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;IAmB9B,CAAC;IAjBC,2BAAM,GAAN,cAAU,CAAC;IAEX,0BAAK,GAAL,cAAS,CAAC;IAEV,2BAAM,GAAN,UAAO,EAAE;QACP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CACpB,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CACtD,CAAC;QACF,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjD,IAAI,QAAQ,GAAG,EAAE,CAAC,EAAE,CAClB,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,EACnC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CACrC,CAAC;QACF,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC;YAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;IAC5B,CAAC;IAlBD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;4CACU;IAFT,UAAU;QAD9B,OAAO;OACa,UAAU,CAqB9B;IAAD,iBAAC;CArBD,AAqBC,CArBuC,EAAE,CAAC,SAAS,GAqBnD;kBArBoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class DeathHeart extends cc.Component {\n  @property(cc.Vec2)\n  vec2: cc.Vec2 = cc.v2(1, 0);\n  angle: number;\n  onLoad() {}\n\n  start() {}\n\n  update(dt) {\n    this.angle = Math.sqrt(\n      this.vec2.x * this.vec2.x - this.vec2.y * this.vec2.y\n    );\n    let atan2 = Math.atan2(this.vec2.y, this.vec2.x);\n    let velocity = cc.v2(\n      this.vec2.x * 300 * dt * this.angle,\n      this.vec2.y * 300 * dt * -this.angle\n    );\n    if (velocity.x == 0 && velocity.y == 0) this.node.destroy();\n    this.node.x += velocity.x;\n    this.node.y += velocity.y;\n  }\n}\n"]}