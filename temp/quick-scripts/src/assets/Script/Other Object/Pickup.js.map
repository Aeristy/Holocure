{"version":3,"sources":["assets\\Script\\Other Object\\Pickup.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;;;;;;;;;;;;;;AAEtF,6CAAwC;AAElC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAoC,0BAAY;IAAhD;QAAA,qEAgCC;QA/BC,eAAS,GAAG,KAAK,CAAC;QAClB,WAAK,GAAW,GAAG,CAAC;;IA8BtB,CAAC;IA5BC,iCAAgB,GAAhB,UAAiB,KAAkB,EAAE,IAAiB;QACpD,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;IACH,CAAC;IAED,uBAAM,GAAN,cAAU,CAAC;IACX,oBAAG,GAAH;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IACnB,CAAC;IACD,6BAAY,GAAZ,UAAa,EAAU;QACrB,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAC3D,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACpC,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACpC,IAAI,eAAe,GAAG,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QACnD,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;IACnB,CAAC;IAED,sBAAK,GAAL,cAAS,CAAC;IAEV,uBAAM,GAAN,UAAO,EAAE;QACP,IAAI,eAAK,CAAC,OAAO;YAAE,OAAO;QAC1B,IAAI,CAAC,IAAI,CAAC,SAAS;YAAE,OAAO;QAC5B,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC;IA/BkB,MAAM;QAD1B,OAAO;OACa,MAAM,CAgC1B;IAAD,aAAC;CAhCD,AAgCC,CAhCmC,EAAE,CAAC,SAAS,GAgC/C;kBAhCoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport Utils from \"../Controller/Utils\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Pickup extends cc.Component {\n  isPicking = false;\n  speed: number = 100;\n\n  onCollisionEnter(other: cc.Collider, self: cc.Collider) {\n    if (other.tag == 7) {\n      this.isPicking = true;\n    }\n  }\n\n  onLoad() {}\n  set() {\n    this.isPicking = false;\n    this.speed = 100;\n  }\n  moveToPlayer(dt: number) {\n    var player = this.node.parent.getChildByName(\"PlayerBase\");\n    var deltaX = player.x - this.node.x;\n    var deltaY = player.y - this.node.y;\n    let normalizedDelta = cc.v2(deltaX, deltaY).normalize();\n    this.node.x += normalizedDelta.x * this.speed * dt;\n    this.node.y += normalizedDelta.y * this.speed * dt;\n    this.speed += 20;\n  }\n\n  start() {}\n\n  update(dt) {\n    if (Utils.isPause) return;\n    if (!this.isPicking) return;\n    this.moveToPlayer(dt);\n  }\n}\n"]}