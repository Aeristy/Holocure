{"version":3,"sources":["assets\\Script\\Item\\BaneOfRegeneration.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameController from \"../Controller/GameController\";\nimport Utils from \"../Controller/Utils\";\nimport PlayerController from \"../Player/PlayerController\";\nimport Item from \"./Item\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class BaneOfRegeneration extends Item {\n  static instance: BaneOfRegeneration;\n  @property(cc.Float)\n  regenTick: number = 5;\n  timer: number = 0;\n  currentLevel = this.level;\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    BaneOfRegeneration.instance = this;\n    this.description = \"Recover health by 1 every 5 seconds.\";\n    this.itemOnLoad();\n    GameController.instance.addItem(this);\n  }\n\n  onLevelUp() {\n    if (this.isLockLevel) return;\n    if (this.currentLevel < this.level) {\n      this.onLevelMax();\n      this.currentLevel = this.level;\n      switch (this.level) {\n        case 1:\n          this.description = \"Recover health by 1 every 4 seconds.\";\n          this.isEquiped = true;\n          GameController.instance.addEquipedItem(this);\n          break;\n        case 2:\n          this.description = \"Recover health by 1 every 3 seconds.\";\n          this.updateStats(4);\n          break;\n        case 3:\n          this.description = \"Recover health by 1 every 2 seconds.\";\n          this.updateStats(3);\n          break;\n        case 4:\n          this.description = \"Recover health by 1 every second.\";\n          this.updateStats(2);\n          break;\n        case 5:\n          this.updateStats(1);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  regenPlayer() {\n    if (this.timer < 0) {\n      this.timer = this.regenTick;\n      PlayerController.instance.regenHP(1);\n    }\n  }\n  updateStats(regenTick: number) {\n    this.regenTick = regenTick;\n  }\n  start() {}\n\n  update(dt) {\n    this.onLevelUp();\n    if (Utils.isPause) return;\n    if (!this.isEquiped) return;\n    this.timer -= dt;\n    this.regenPlayer();\n  }\n}\n"]}