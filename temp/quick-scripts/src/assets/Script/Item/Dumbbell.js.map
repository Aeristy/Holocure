{"version":3,"sources":["assets\\Script\\Item\\Dumbbell.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameController from \"../Controller/GameController\";\nimport Utils from \"../Controller/Utils\";\nimport HealthAndShield from \"../Player/HealthAndShield\";\nimport PlayerController from \"../Player/PlayerController\";\nimport Item from \"./Item\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Dumbbell extends Item {\n  static instance: Dumbbell;\n  @property(cc.Float)\n  hpRate: number = 10;\n  currentLevel = this.level;\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    this.itemOnLoad();\n    Dumbbell.instance = this;\n    this.description = \"Increase max HP by 10%.\";\n  }\n  onLevelUp() {\n    if (this.isLockLevel) return;\n    if (this.currentLevel < this.level) {\n      this.onLevelMax();\n      this.currentLevel = this.level;\n      switch (this.level) {\n        case 1:\n          this.description = \"Increase max HP by 20%.\";\n          this.isEquiped = true;\n          GameController.instance.addEquipedItem(this);\n          this.loadStats();\n          break;\n        case 2:\n          this.description = \"Increase max HP by 30%.\";\n          this.updateStats(10);\n          break;\n        case 3:\n          this.description = \"Increase max HP by 40%.\";\n          this.updateStats(10);\n          break;\n        case 4:\n          this.description = \"Increase max HP by 50%.\";\n          this.updateStats(10);\n          break;\n        case 5:\n          this.updateStats(10);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  loadStats() {\n    this.overallStats.increaseMaxHPRate(this.hpRate);\n    HealthAndShield.instance.setStateHP(\n      PlayerController.instance.currentHp,\n      PlayerController.instance.maxHp\n    );\n  }\n  updateStats(additionHpRate: number) {\n    this.overallStats.increaseMaxHPRate(additionHpRate);\n    this.hpRate += additionHpRate;\n    HealthAndShield.instance.setStateHP(\n      PlayerController.instance.currentHp,\n      PlayerController.instance.maxHp\n    );\n  }\n\n  start() {}\n\n  update(dt) {\n    this.onLevelUp();\n    if (Utils.isPause) return;\n    if (!this.isEquiped) return;\n  }\n}\n"]}