{"version":3,"sources":["assets\\Script\\Controller\\OptionTest.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport Item from \"../Item/Item\";\nimport Sword from \"../Weapon/Sword\";\n\nconst { ccclass, property } = cc._decorator;\nclass Option {\n  optionType: string;\n  weight: number;\n\n  constructor(optionType: string, weight: number) {\n    this.optionType = optionType;\n    this.weight = weight;\n  }\n}\nclass Player {\n  unpickedSkills: number;\n  allSkillsFullyLeveled: boolean;\n  unpickedWeapons: number;\n  unpickedItems: number;\n  weaponEquipped: boolean;\n  itemEquipped: boolean;\n\n  constructor() {\n    // Initialize player's attributes, such as unpicked skills, weapons, and items, equipped weapon/item status, etc.\n    this.unpickedSkills = 3; // Assuming the player has 3 unpicked skills initially.\n    this.allSkillsFullyLeveled = false;\n    this.unpickedWeapons = 5; // Assuming the player has 5 unpicked weapons initially.\n    this.unpickedItems = 7; // Assuming the player has 7 unpicked items initially.\n    this.weaponEquipped = true; // Assuming the player has a weapon equipped initially.\n    this.itemEquipped = true; // Assuming the player has an item equipped initially.\n  }\n\n  // Function to check if the player can be offered a skill option\n  canOfferSkill(): boolean {\n    return this.unpickedSkills > 0 && !this.allSkillsFullyLeveled;\n  }\n\n  // Function to check if the player can be offered a weapon option\n  canOfferWeapon(): boolean {\n    return this.unpickedWeapons > 0 && !this.weaponEquipped;\n  }\n\n  // Function to check if the player can be offered an item option\n  canOfferItem(): boolean {\n    return this.unpickedItems > 0 && !this.itemEquipped;\n  }\n}\n@ccclass\nexport default class NewClass extends cc.Component {\n  // Function to randomly select an option from the given list\n  selectRandomOption(list: Option[]): Option {\n    const totalWeight = list.reduce((sum, option) => sum + option.weight, 0);\n    let randomWeight = Math.floor(Math.random() * totalWeight);\n\n    for (const option of list) {\n      randomWeight -= option.weight;\n      if (randomWeight < 0) {\n        return option;\n      }\n    }\n\n    // In case something went wrong, return the last option in the list\n    return list[list.length - 1];\n  }\n\n  // Function to generate a list of options for a specific option type\n  generateOptionList(optionType: string): Option[] {\n    // Assuming different options for each option type with varying weights.\n    // Replace these with your actual options and weights.\n    let options: Option[] = [];\n    if (optionType === \"skill\") {\n      options.push(new Option(\"SkillOption1\", 1));\n      options.push(new Option(\"SkillOption2\", 1));\n      options.push(new Option(\"SkillOption3\", 1));\n    } else if (optionType === \"weapon\") {\n      options.push(new Option(\"WeaponOption1\", 2));\n      options.push(new Option(\"WeaponOption2\", 3));\n      options.push(new Option(\"WeaponOption3\", 1));\n    } else if (optionType === \"item\") {\n      options.push(new Option(\"ItemOption1\", 2));\n      options.push(new Option(\"ItemOption2\", 2));\n      options.push(new Option(\"ItemOption3\", 4));\n    } else if (optionType === \"StatUp\") {\n      options.push(new Option(\"StatUpOption\", 1));\n    }\n\n    return options;\n  }\n\n  // Function to simulate option selection for each option slot\n  selectOptions(player: Player): Option[] {\n    let options: Option[] = [];\n\n    // Option 1\n    let optionType1: string;\n    const random1 = Math.random();\n    if (random1 < 7 / 20) {\n      optionType1 = \"skill\";\n    } else if (random1 < 14 / 20) {\n      optionType1 = \"weapon\";\n    } else if (random1 < 19 / 20) {\n      optionType1 = \"item\";\n    } else {\n      optionType1 = \"StatUp\";\n    }\n\n    let optionList1 = this.generateOptionList(optionType1);\n\n    if (!player.canOfferSkill()) {\n      optionList1 = optionList1.filter(\n        (option) => option.optionType !== \"skill\"\n      );\n      if (!player.canOfferWeapon()) {\n        optionList1 = optionList1.filter(\n          (option) => option.optionType !== \"weapon\"\n        );\n        if (!player.canOfferItem()) {\n          optionList1 = optionList1.filter(\n            (option) => option.optionType !== \"item\"\n          );\n        }\n      }\n    }\n\n    options.push(this.selectRandomOption(optionList1));\n    // Option 2\n    let optionType2: string;\n    const random2 = Math.random();\n    if (random2 < 7 / 20) {\n      optionType2 = \"skill\";\n    } else if (random2 < 14 / 20) {\n      optionType2 = \"weapon\";\n    } else if (random2 < 19 / 20) {\n      optionType2 = \"item\";\n    } else {\n      optionType2 = \"StatUp\";\n    }\n\n    let optionList2 = this.generateOptionList(optionType2);\n\n    if (!player.canOfferSkill()) {\n      optionList2 = optionList2.filter(\n        (option) => option.optionType !== \"skill\"\n      );\n      if (!player.canOfferWeapon()) {\n        optionList2 = optionList2.filter(\n          (option) => option.optionType !== \"weapon\"\n        );\n        if (!player.canOfferItem()) {\n          optionList2 = optionList2.filter(\n            (option) => option.optionType !== \"item\"\n          );\n        }\n      }\n    }\n\n    options.push(this.selectRandomOption(optionList2));\n\n    // Option 3\n    let optionType3: string;\n    const random3 = Math.random();\n    if (random3 < 0.5) {\n      optionType3 = \"weapon\";\n    } else {\n      optionType3 = \"item\";\n    }\n\n    let optionList3 = this.generateOptionList(optionType3);\n\n    if (!player.canOfferWeapon()) {\n      optionList3 = optionList3.filter(\n        (option) => option.optionType !== \"weapon\"\n      );\n      if (!player.canOfferItem()) {\n        optionList3 = optionList3.filter(\n          (option) => option.optionType !== \"item\"\n        );\n        if (!player.canOfferSkill()) {\n          optionList3 = optionList3.filter(\n            (option) => option.optionType === \"skill\"\n          );\n        }\n      }\n    }\n\n    // Try up to 5 times to get an option from the list if skill option is not available.\n    let maxTries = 5;\n    while (maxTries > 0) {\n      const selectedOption = this.selectRandomOption(optionList3);\n      if (selectedOption.optionType === \"skill\") {\n        options.push(selectedOption);\n        break;\n      }\n      maxTries--;\n    }\n\n    // If the previous check fails, add the food option to the options list.\n    if (maxTries === 0) {\n      options.push(new Option(\"FoodOption\", 1));\n    }\n\n    // Option 4\n    let optionType4: string;\n    const random4 = Math.random();\n    if (random4 < 0.5) {\n      optionType4 = \"weapon\";\n    } else {\n      optionType4 = \"item\";\n    }\n\n    let optionList4 = this.generateOptionList(optionType4);\n\n    if (!player.canOfferWeapon() && !player.canOfferItem()) {\n      options.push(new Option(\"HoloCoinOption\", 1));\n    } else {\n      // Try up to 5 times to get an option from the list if the first type is not available.\n      maxTries = 5;\n      while (maxTries > 0) {\n        const selectedOption = this.selectRandomOption(optionList4);\n        if (\n          (selectedOption.optionType === \"weapon\" && player.canOfferWeapon()) ||\n          (selectedOption.optionType === \"item\" && player.canOfferItem())\n        ) {\n          options.push(selectedOption);\n          break;\n        }\n        maxTries--;\n      }\n\n      // If the previous check fails, add the HoloCoin option to the options list.\n      if (maxTries === 0) {\n        options.push(new Option(\"HoloCoinOption\", 1));\n      }\n    }\n\n    return options;\n  }\n\n  // Usage example\n\n  // LIFE-CYCLE CALLBACKS:\n  @property(cc.Node)\n  sword: cc.Node = null;\n  onLoad() {\n    const player = new Player();\n    const selectedOptions = this.selectOptions(player);\n    selectedOptions.forEach((element) => {\n      console.log(element.optionType, element.weight);\n    });\n  }\n\n  update(dt) {}\n}\n"]}