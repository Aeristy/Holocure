{"version":3,"sources":["assets\\Script\\Enemy\\EnemyController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameController from \"../Controller/GameController\";\nimport Utils from \"../Controller/Utils\";\nimport objectPooling from \"../Manager/ObjectPooling\";\n\nimport OverallStats from \"../Player/OverallStats\";\nimport PlayerController from \"../Player/PlayerController\";\nimport EnemyManager from \"./EnemyManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class EnemyController extends cc.Component {\n  @property(cc.Float)\n  speed = 0.5;\n  @property(cc.Float)\n  maxHp = 20;\n  @property(cc.Float)\n  scale = 1;\n  currentHp = 20;\n  @property(cc.Float)\n  damage = 2;\n  @property(cc.Integer)\n  expDropAmount: number = 8;\n  @property(cc.AudioClip)\n  hitSound: cc.AudioClip = null;\n  damageTick: number = 0;\n  distance: number;\n  isFlip: boolean;\n  player: cc.Node = null;\n  moveVec: cc.Vec2;\n  deltaX: number;\n  isKilled: boolean;\n  gainKilled: boolean = false;\n  isInRange = false;\n  deltaTime: number;\n  takeDamageTick: number;\n  onLoad() {\n    this.isFlip = false;\n    this.isInRange = false;\n    this.player = this.node.parent.getChildByName(\"PlayerBase\");\n    this.node.zIndex = 30000;\n    this.moveVec = cc.Vec2.ZERO;\n    this.currentHp = this.maxHp;\n    this.deltaX = 0;\n  }\n  setter(\n    speed: number,\n    maxHp: number,\n    scale: number,\n    damage: number,\n    expDropAmount: number\n  ) {\n    this.speed = speed;\n    this.maxHp = maxHp;\n    this.scale = scale;\n    this.damage = damage;\n    this.currentHp = maxHp;\n    this.expDropAmount = expDropAmount;\n    this.getComponent(cc.Collider).enabled = true;\n    this.node.opacity = 255;\n    this.isKilled = false;\n    this.gainKilled = false;\n    this.isInRange = false;\n    this.node.scale = scale;\n  }\n  resetStat() {\n    this.currentHp = this.maxHp;\n    this.getComponent(cc.Collider).enabled = true;\n    this.node.opacity = 255;\n    this.isKilled = false;\n    this.gainKilled = false;\n    this.isInRange = false;\n  }\n  takeDamage(damage: number) {\n    if (Utils.getLocal(\"Sound\") == \"true\")\n      cc.audioEngine.play(this.hitSound, false, 0.5);\n    var crit = OverallStats.instance.getCritChance() / 100;\n    if (Math.random() <= crit) {\n      damage =\n        (damage * (OverallStats.instance.getCritDamageRate() + 150)) / 100;\n    }\n    this.currentHp -= damage;\n    this.node.getChildByName(\"OnHitFrame\").active = true;\n    this.scheduleOnce(function () {\n      this.node.getChildByName(\"OnHitFrame\").active = false;\n    }, 0.025);\n  }\n  takeDamageWithTick(damage: number, tickRate: number) {\n    if (this.takeDamageTick > 0) return;\n    if (Utils.getLocal(\"Sound\") == \"true\")\n      cc.audioEngine.play(this.hitSound, false, 0.5);\n    this.takeDamageTick = tickRate;\n    var crit = OverallStats.instance.getCritChance() / 100;\n    if (Math.random() <= crit) {\n      damage =\n        (damage * (OverallStats.instance.getCritDamageRate() + 150)) / 100;\n    }\n    this.currentHp -= damage;\n    this.node.getChildByName(\"OnHitFrame\").active = true;\n    this.scheduleOnce(function () {\n      this.node.getChildByName(\"OnHitFrame\").active = false;\n    }, 0.025);\n  }\n\n  onCollisionStay(other: cc.Collider, self: cc.Collider) {\n    if (other.tag == 0 && this.damageTick < 0) {\n      this.damageTick = 0.5;\n      PlayerController.instance.takeDamage(this.damage);\n    }\n  }\n\n  start() {}\n  moveToPlayer(dt: number) {\n    if (this.currentHp > 0) {\n      var deltaX = this.player.x - this.node.x;\n      var deltaY = this.player.y - this.node.y;\n      let normalizedDelta = cc.v2(deltaX, deltaY).normalize();\n      let length = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n      if (length > 2) {\n        if (normalizedDelta.x > 0) {\n          this.isFlip = false;\n          this.node.scaleX = this.scale;\n        } else {\n          this.isFlip = true;\n          this.node.scaleX = -this.scale;\n        }\n      }\n\n      this.node.x += normalizedDelta.x * this.speed * 175 * dt;\n      this.node.y += normalizedDelta.y * this.speed * 175 * dt;\n    }\n  }\n  dropExp() {\n    objectPooling.instance.generateExp(this.node, this.expDropAmount);\n  }\n  dropFood() {\n    objectPooling.instance.generateFood(this.node);\n  }\n  dropCoin() {\n    let countAmount = Utils.randomFloor(10, 50);\n    objectPooling.instance.generateCoin(this.node, countAmount);\n  }\n  dropRainbowExp() {\n    objectPooling.instance.generateMagnet(this.node);\n  }\n  calculateDistance() {\n    var distanceX =\n      (this.player.x - this.node.x) * (this.player.x - this.node.x);\n    var distanceY =\n      (this.player.y - this.node.y) * (this.player.y - this.node.y);\n    this.distance = Math.sqrt(distanceX + distanceY);\n  }\n  onEnemyKill(dt) {\n    if (this.currentHp <= 0) {\n      this.isKilled = true;\n      if (this.isFlip) {\n        this.node.x += 150 * dt;\n        this.node.opacity -= 500 * dt;\n      } else {\n        this.node.x -= 150 * dt;\n        this.node.opacity -= 500 * dt;\n      }\n      if (this.isKilled && !this.gainKilled) {\n        GameController.instance.gainKill();\n        let random = Math.random();\n        if (random < 1 / 2000) {\n          this.dropRainbowExp();\n        } else if (random < 1 / 200) {\n          this.dropFood();\n        } else if (random < 1 / 90) {\n          this.dropCoin();\n        } else this.dropExp();\n        this.gainKilled = true;\n        this.node.getComponent(cc.PolygonCollider).enabled = false;\n        setTimeout(() => {\n          EnemyManager.instance.putBackToPool(this.node);\n        }, 300);\n      }\n    }\n  }\n\n  update(dt) {\n    if (Utils.isPause) {\n      this.node.getComponent(cc.Animation).pause();\n      return;\n    }\n    this.node.getComponent(cc.Animation).resume();\n    if (this.currentHp > 0) {\n      this.isKilled = false;\n    }\n    this.damageTick -= dt;\n    this.takeDamageTick -= dt;\n    this.moveToPlayer(dt);\n    this.onEnemyKill(dt);\n    this.calculateDistance();\n  }\n}\n"]}