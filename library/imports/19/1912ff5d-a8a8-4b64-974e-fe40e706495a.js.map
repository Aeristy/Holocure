{"version":3,"sources":["assets\\Script\\Weapon\\SpiralProjectile.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport Utils from \"../Controller/Utils\";\nimport ProjectilePooling from \"../Manager/ProjectilePooling\";\nimport Projectile from \"../Weapon/Projectile\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class SpiralProjectile extends Projectile {\n  @property(cc.Float)\n  duration: number = 3;\n  baseDuration: number = this.duration;\n  durationPercentage: number = 0;\n  currentTime: number = 0;\n  @property(cc.Float)\n  startRadius: number = 100;\n  currentRadius: number = 100;\n  @property(cc.Float)\n  maxRadius: number = 400;\n  angleDelta: number = 0;\n  pivot: cc.Node = null;\n  interval = 0.01;\n  time = this.interval;\n  previous: cc.Node = null;\n  trailList: Array<cc.Node> = new Array<cc.Node>();\n  start() {}\n  onLoad(): void {\n    this.node.zIndex = 10000;\n    this.baseDamange = this.damage;\n    this.baseScale = this.weaponScale;\n    this.damagePercentage = 0;\n    this.weaponScalePercentage = 0;\n    this.currentRadius = this.startRadius;\n  }\n  updateStats() {\n    this.damage =\n      (this.damagePercentage / 100) * this.baseDamange + this.baseDamange;\n    this.weaponScale =\n      (this.weaponScalePercentage / 100) * this.baseScale + this.baseScale;\n    this.duration =\n      this.baseDuration + (this.durationPercentage / 100) * this.baseDuration;\n    this.node.scale = this.weaponScale;\n  }\n\n  setStats(\n    damagePercentage: number,\n    bonusDamage: number,\n    weaponScalePercentage: number,\n    hitLimit: number,\n    durationPercentage: number,\n    pivot: cc.Node\n  ) {\n    this.time = this.interval;\n    this.angleDelta = 0;\n    this.currentRadius = this.startRadius;\n    this.currentTime = 0;\n    this.baseDamange = bonusDamage;\n    this.damagePercentage = damagePercentage;\n    this.weaponScalePercentage = weaponScalePercentage;\n    this.pivot = pivot;\n    this.hitLimit = hitLimit;\n    this.durationPercentage = durationPercentage;\n    this.lock = false;\n    this.updateStats();\n  }\n\n  putBackToPool() {\n    if (this.hitLimit <= 0) {\n      this.trailList.forEach((element) => {\n        ProjectilePooling.instance.putBackToPool(element);\n      });\n      this.trailList.length = 0;\n      ProjectilePooling.instance.putBackToPool(this.node);\n    }\n    if (this.currentTime >= this.duration) {\n      this.trailList.forEach((element) => {\n        ProjectilePooling.instance.putBackToPool(element);\n      });\n      this.trailList.length = 0;\n      ProjectilePooling.instance.putBackToPool(this.node);\n    }\n  }\n  spinAround(dt: number) {\n    this.addTrail(dt);\n    this.node.angle += dt * 1500;\n    this.angleDelta -= dt * 4;\n    this.currentRadius += dt * 90;\n    if (this.currentRadius > this.maxRadius)\n      this.currentRadius = this.maxRadius;\n    this.node.x = this.pivot.x + this.currentRadius * Math.cos(this.angleDelta);\n    this.node.y = this.pivot.y + this.currentRadius * Math.sin(this.angleDelta);\n  }\n  addTrail(dt) {\n    if (this.time > 0) this.time -= dt;\n    else {\n      this.time = this.interval;\n      let clone: cc.Node = null;\n      clone = ProjectilePooling.instance.trailPool.get();\n\n      if (clone == null) {\n        clone = new cc.Node(\"Trail\");\n      }\n\n      this.trailList.push(clone);\n      clone.parent = this.node.parent;\n      clone.scale = this.node.scale;\n      clone.opacity = 200;\n      clone.angle = this.node.angle;\n      clone.zIndex = 9999;\n\n      clone.position = cc.v3(this.node.x, this.node.y);\n      if (clone.getComponent(cc.Sprite) != null)\n        clone.getComponent(cc.Sprite).spriteFrame = this.node.getComponent(\n          cc.Sprite\n        ).spriteFrame;\n      else\n        clone.addComponent(cc.Sprite).spriteFrame = this.node.getComponent(\n          cc.Sprite\n        ).spriteFrame;\n      clone.setContentSize(this.node.getContentSize());\n      cc.tween(clone).to(0.08, { opacity: 0 }).start();\n    }\n  }\n  update(dt) {\n    if (Utils.isPause) {\n      return;\n    }\n    this.currentTime += dt;\n    this.spinAround(dt);\n    this.putBackToPool();\n  }\n}\n"]}