{"version":3,"sources":["assets\\Script\\Weapon\\Projectile.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport Movement from \"../Controller/Movement\";\nimport Utils from \"../Controller/Utils\";\nimport EnemyController from \"../Enemy/EnemyController\";\nimport ProjectilePooling from \"../Manager/ProjectilePooling\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Projectile extends cc.Component {\n  @property(cc.Float)\n  damage = 20;\n  @property(cc.Float)\n  weaponScale = 1;\n  @property(cc.Float)\n  travelSpeed = 400;\n  @property(cc.Float)\n  hitLimit = 1;\n  @property(cc.Boolean)\n  isShootingAtTarget = true;\n  baseDamange: number;\n  baseScale: number;\n  damagePercentage: number;\n  weaponScalePercentage: number;\n  directionVector: cc.Vec2;\n  angle: number;\n  lock: boolean = false;\n  target: cc.Node = null;\n  onCollisionEnter(other: cc.Collider, self: cc.Collider) {\n    if (other.tag == 1) {\n      other.node.getComponent(EnemyController).takeDamage(this.damage);\n      this.hitLimit -= 1;\n    }\n  }\n  putBackToPool() {\n    var player = this.node.parent.getChildByName(\"PlayerBase\");\n    var distanceX = (player.x - this.node.x) * (player.x - this.node.x);\n    var distanceY = (player.y - this.node.y) * (player.y - this.node.y);\n    var distance = Math.sqrt(distanceX + distanceY);\n    if (this.hitLimit <= 0) {\n      ProjectilePooling.instance.putBackToPool(this.node);\n    }\n    if (distance > 1200) {\n      ProjectilePooling.instance.putBackToPool(this.node);\n    }\n  }\n  moveToTarget(target: cc.Node, dt: number) {\n    if (this.isShootingAtTarget) {\n      this.target = target;\n    }\n    if (target == null && !this.lock) {\n      this.directionVector = Movement.instance.directionVector.normalize();\n      this.directionVector = cc.v2(\n        this.directionVector.x + Utils.random(-0.1, 0.1),\n        this.directionVector.y + Utils.random(-0.1, 0.1)\n      );\n\n      this.node.angle =\n        Math.atan2(this.directionVector.y, this.directionVector.x) *\n        (180 / Math.PI);\n      this.lock = true;\n    }\n    if (target != null && !this.lock) {\n      this.lock = true;\n\n      var deltaX = this.target.x - this.node.x;\n      var deltaY = this.target.y - this.node.y;\n      this.directionVector = cc.v2(deltaX, deltaY).normalize();\n      this.node.angle =\n        Math.atan2(this.directionVector.y, this.directionVector.x) *\n        (180 / Math.PI);\n    }\n    this.node.x += this.directionVector.normalize().x * this.travelSpeed * dt;\n    this.node.y += this.directionVector.normalize().y * this.travelSpeed * dt;\n  }\n\n  updateStats() {\n    this.damage =\n      (this.damagePercentage / 100) * this.baseDamange + this.baseDamange;\n    this.weaponScale =\n      (this.weaponScalePercentage / 100) * this.baseScale + this.baseScale;\n    this.node.scale = this.weaponScale;\n  }\n  set(\n    damagePercentage: number,\n    bonusDamage: number,\n    weaponScalePercentage: number,\n    hitLimit: number,\n    target: cc.Node,\n    position: cc.Vec3\n  ) {\n    this.baseDamange = bonusDamage;\n    this.damagePercentage = damagePercentage;\n    this.weaponScalePercentage = weaponScalePercentage;\n    this.target = target;\n    this.node.position = position;\n    this.hitLimit = hitLimit;\n    this.lock = false;\n    this.updateStats();\n  }\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    this.node.zIndex = 10001;\n    this.baseDamange = this.damage;\n    this.baseScale = this.weaponScale;\n    this.damagePercentage = 0;\n    this.weaponScalePercentage = 0;\n  }\n\n  start() {}\n\n  update(dt) {\n    if (Utils.isPause) {\n      return;\n    }\n    this.moveToTarget(this.target, dt);\n    this.putBackToPool();\n  }\n}\n"]}