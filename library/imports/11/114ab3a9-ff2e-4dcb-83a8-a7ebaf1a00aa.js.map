{"version":3,"sources":["assets\\Script\\Weapon\\Weapon.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameController from \"../Controller/GameController\";\nimport OverallStats from \"../Player/OverallStats\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Weapon extends cc.Component {\n  static instance: Weapon;\n  @property(cc.Float)\n  level: number = 0;\n  @property(cc.Float)\n  maxLevel: number = 7;\n  isEquiped: boolean = false;\n  @property(cc.Boolean)\n  isResizeable: boolean = true;\n  @property(cc.Float)\n  baseDamage: number = 20;\n  isLockLevel: boolean = false;\n  description: string = null;\n  @property(cc.Float)\n  attackSpeed: number = 2;\n  @property(cc.Float)\n  minAS: number = 1;\n  @property(cc.SpriteFrame)\n  displayIcon: cc.SpriteFrame = null;\n  baseAS: number;\n  damagePercentage: number;\n  attackSpeedPercentage: number;\n  weaponScalePercentage: number;\n  resultDamagePercentage: number;\n  resultAttackSpeedPercentage: number;\n  resultWeaponScalePercentage: number;\n  overallStat: OverallStats;\n  name: string;\n\n  // onLoad () {}\n\n  start() {}\n  onLevelMax() {\n    if (this.level >= this.maxLevel) {\n      this.isLockLevel = true;\n    }\n  }\n\n  weaponOnLoad() {\n    Weapon.instance = this;\n    GameController.instance.addWeapon(this);\n    this.overallStat = OverallStats.instance;\n    this.name = this.node.name;\n    this.baseAS = this.attackSpeed;\n    this.damagePercentage = 0;\n    this.attackSpeedPercentage = 0;\n    this.weaponScalePercentage = 0;\n    this.resultDamagePercentage = 0;\n    this.resultAttackSpeedPercentage = 0;\n    this.resultWeaponScalePercentage = 0;\n    this.onStatChange();\n  }\n  onStatChange() {\n    this.resultDamagePercentage =\n      this.damagePercentage + this.overallStat.getAttackRate();\n    this.resultWeaponScalePercentage = this.weaponScalePercentage;\n    if (this.isResizeable)\n      this.resultWeaponScalePercentage =\n        this.weaponScalePercentage + this.overallStat.getWeaponSizeRate();\n    this.resultAttackSpeedPercentage =\n      this.attackSpeedPercentage + this.overallStat.getHasteRate();\n    this.attackSpeed =\n      this.baseAS - (this.baseAS * this.resultAttackSpeedPercentage) / 100;\n    if (this.attackSpeed < this.minAS) this.attackSpeed = this.minAS;\n  }\n}\n"]}