{"version":3,"sources":["assets\\Script\\Weapon\\SpiderCooking.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameController from \"../Controller/GameController\";\nimport Utils from \"../Controller/Utils\";\nimport EnemyController from \"../Enemy/EnemyController\";\nimport Weapon from \"./Weapon\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class SpiderCooking extends Weapon {\n  // LIFE-CYCLE CALLBACKS:\n\n  currentLevel = this.level;\n\n  onLoad() {\n    this.weaponOnLoad();\n    this.description =\n      \"Create an area of miasma around, dealing slow damage to enemies inside.\";\n    this.node.zIndex = 1;\n    this.node.getComponent(cc.Sprite).enabled = false;\n    this.node.getComponent(cc.CircleCollider).enabled = false;\n  }\n  onCollisionStay(other: cc.Collider, self: cc.Collider) {\n    if (other.tag == 1) {\n      let damage =\n        this.baseDamage + (this.baseDamage * this.resultDamagePercentage) / 100;\n      other.node\n        .getComponent(EnemyController)\n        .takeDamageWithTick(damage, this.attackSpeed);\n    }\n  }\n  updateStats(\n    damagePercentage: number,\n    attackSpeedPercentage: number,\n    weaponScalePercentage: number\n  ) {\n    this.damagePercentage += damagePercentage;\n    this.attackSpeedPercentage += attackSpeedPercentage;\n    this.node.scale += weaponScalePercentage / 100;\n    this.onStatChange();\n    // this.node.scale = this.resultWeaponScalePercentage;\n  }\n  onLevelUp() {\n    if (this.isLockLevel) return;\n    if (this.currentLevel < this.level) {\n      this.onLevelMax();\n      this.currentLevel = this.level;\n      switch (this.level) {\n        case 1:\n          this.description = \"Increase area by 15%.\";\n          this.isEquiped = true;\n          this.node.getComponent(cc.Sprite).enabled = true;\n          this.node.getComponent(cc.CircleCollider).enabled = true;\n          GameController.instance.addEquipedWeapon(this);\n          break;\n        case 2:\n          this.description = \"Increase damage by 30%.\";\n          this.updateStats(0, 0, 15);\n          break;\n        case 3:\n          this.description = \"Increase area by 25%.\";\n          this.updateStats(30, 0, 0);\n          break;\n        case 4:\n          this.description = \"Increase frequency of hits by 20%.\";\n          this.updateStats(0, 0, 25);\n          break;\n        case 5:\n          this.description = \"Increase damage by 30%.\";\n          this.updateStats(0, 20, 0);\n          break;\n        case 6:\n          this.description = \"Increase damage by 30%.\";\n          this.updateStats(0, 30, 0);\n          break;\n        case 7:\n          this.updateStats(0, 30, 0);\n          break;\n        default:\n          break;\n      }\n    }\n    return true;\n  }\n  start() {}\n\n  update(dt) {\n    this.onLevelUp();\n    if (!this.isEquiped) return;\n    if (Utils.isPause) {\n      this.node.getComponent(cc.Animation).pause();\n      return;\n    }\n    this.node.getComponent(cc.Animation).resume();\n  }\n}\n"]}